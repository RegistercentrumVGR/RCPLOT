% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bar_plot.R
\name{bar_plot_2}
\alias{bar_plot_2}
\title{Produce a bar plot}
\usage{
bar_plot_2(
  df,
  x_var,
  y_var,
  fill_var = NULL,
  y_var_text = NULL,
  x_breaks = ggplot2::waiver(),
  x_labels = ggplot2::waiver(),
  x_lim = NULL,
  y_breaks = ggplot2::waiver(),
  y_labels = ggplot2::waiver(),
  y_lim = NULL,
  horizontal = FALSE,
  position = "dodge",
  label = FALSE,
  label_vjust = 0.25,
  label_size = lifecycle::deprecated(),
  x_lab = NULL,
  y_lab = NULL,
  title = ggplot2::waiver(),
  palette_type = "qualitative",
  fill_title = NULL,
  add_total = FALSE,
  total_var = NULL,
  add_censored_caption = TRUE,
  plotly = FALSE,
  facet = FALSE,
  facet_by = NULL,
  arrange_by = x_var,
  arrange_by_fill = NULL,
  arrange_desc = FALSE,
  fill_var_order = NULL,
  reference_line = NULL,
  legend_nrow = 1,
  colors = NULL,
  text_size = 7,
  width = 0.9,
  label_contrast = FALSE,
  remove_grid = TRUE,
  remove_legend = FALSE
)
}
\arguments{
\item{df}{data.frame to plot}

\item{x_var}{the name of the x variable}

\item{y_var}{the name of the y variable}

\item{fill_var}{the name of the fill variable}

\item{y_var_text}{the name of variable used as a label}

\item{x_breaks}{vector of breaks for x-axis}

\item{x_labels}{vector of labels for x-axis}

\item{x_lim}{limits for the x-axis}

\item{y_breaks}{vector of breaks for y-axis}

\item{y_labels}{vector of labels for y-labels}

\item{y_lim}{limits for the y-axis}

\item{horizontal}{whether or not to plot horizontally}

\item{position}{one of \code{dodge} and \code{stack}}

\item{label}{whether or not to add labels to the plot}

\item{label_vjust}{the vertical adjustment of the labels}

\item{label_size}{deprecated}

\item{x_lab}{the label for the x-axis}

\item{y_lab}{the label for the y-axis}

\item{title}{the title of the plot}

\item{palette_type}{the type of palette, one of "qualitative", "sequential",
and "diverging"}

\item{fill_title}{the title of the fill legend}

\item{add_total}{whether or not to add a total to the name of each bar}

\item{total_var}{the name of the total variable used when \code{add_total} is
\code{TRUE}}

\item{add_censored_caption}{whether or not to add a caption when data has
been censored, requires \code{obfuscated_reason} column produced by
\code{\link[RCStat:obfuscate_data]{RCStat::obfuscate_data()}}}

\item{plotly}{whether or not to convert the finished plot to a plotly
graph}

\item{facet}{whether or not to facet the plots using \link[ggplot2:facet_wrap]{ggplot2::facet_wrap}}

\item{facet_by}{the name of the variable to facet by}

\item{arrange_by}{the name of the variable to arrange by}

\item{arrange_by_fill}{the category in fill_var that should be considered
in the ordering}

\item{arrange_desc}{whether to arrange in descending order}

\item{fill_var_order}{a character vector of values in \code{fill_var} passed to
\code{\link[forcats:fct_relevel]{forcats::fct_relevel()}} which determines the order the colored bars appear
in}

\item{reference_line}{the intercept of the horizontal reference line}

\item{legend_nrow}{the number of rows for the fill legend}

\item{colors}{manually specified colors to use for fill, only used when
\code{palette_type} is \code{qualitative}, must be subset of
\code{colors_rc_2(9, "qualitative")}}

\item{text_size}{passed to \code{\link[=theme_rc]{theme_rc()}}}

\item{width}{the width of the bars}

\item{label_contrast}{whether to automatically pick the most contrasting
color for labels compared to the fill aesthetic}

\item{remove_grid}{if grid should be removed}

\item{remove_legend}{if all legends should be removed}
}
\description{
Produces a bar plot according to Registercentrum graphical standards.
}
\details{
The argument \code{position} indicates whether to use \code{\link[ggplot2:position_dodge]{ggplot2::position_dodge()}}
or \code{\link[ggplot2:position_stack]{ggplot2::position_stack()}} for both the bars and the labels.

The arguments \verb{*_lim}, \verb{*_breaks}, and \verb{*_labels} are passed to
\link[ggplot2:scale_continuous]{ggplot2::scale_y_continuous} and \link[ggplot2:scale_discrete]{ggplot2::scale_x_discrete}.

The arguments \code{x_lab}, \code{y_lab}, and \code{title} are passed to \code{\link[ggplot2:labs]{ggplot2::labs()}}.
}
\examples{
df <- data.frame(
  unit = letters[1:3],
  category = rep(1:3, each = 3),
  n = sample(1:10, 9, replace = TRUE)
) |>
  dplyr::group_by(unit) |>
  dplyr::mutate(
    total = sum(n),
    prop = n / total
  )

bar_plot_2(
  df = df,
  x_var = "unit",
  y_var = "prop",
  fill_var = "category",
  label = TRUE,
  position = "stack",
  y_var_text = "n",
  fill_title = "Kategori",
  y_labels = scales::label_percent(),
  x_lab = "Enhet"
)

bar_plot_2(
  df = df,
  x_var = "unit",
  y_var = "prop",
  fill_var = "category",
  label = TRUE,
  position = "stack",
  y_var_text = "n",
  fill_title = "Kategori",
  y_labels = scales::label_percent(),
  x_lab = "Enhet",
  plotly = TRUE
)

bar_plot_2(
  df = df,
  x_var = "unit",
  y_var = "total",
  position = "stack",
  horizontal = TRUE,
  x_lab = "Enhet",
  y_lab = "Antal"
)

df_2 <- data.frame(
  unit = letters[1:6],
  n = c(7, 8, 4, 9, 3, 16),
  total = c(16, 19, 20, 15, 10, 21)
) |>
  dplyr::mutate(prop = n / total) |>
  RCStat::obfuscate_data(add_reason_col = TRUE)

bar_plot_2(
  df = df_2,
  x_var = "unit",
  y_var = "prop",
  add_total = TRUE,
  total_var = "total",
  y_labels = scales::label_percent(),
  add_censored_caption = TRUE
)

bar_plot_2(
  df = df_2,
  x_var = "unit",
  y_var = "prop",
  add_total = TRUE,
  total_var = "total",
  y_labels = scales::label_percent(),
  add_censored_caption = TRUE,
  plotly = TRUE,
  x_lab = "Enhet",
  y_lab = "Andel (\%)",
  title = "En graf"
)

bar_plot_2(
  df = df,
  x_var = "category",
  y_var = "prop",
  facet = TRUE,
  facet_by = "unit"
)

bar_plot_2(
  df = df_2,
  x_var = "unit",
  y_var = "prop",
  add_total = TRUE,
  total_var = "total",
  y_labels = scales::label_percent(),
  add_censored_caption = TRUE,
  x_lab = "Enhet",
  y_lab = "Andel (\%)",
  title = "En graf",
  arrange_by = "total"
)

bar_plot_2(
  df = df_2,
  x_var = "unit",
  y_var = "prop",
  y_labels = scales::label_percent(),
  arrange_by = "prop",
  horizontal = TRUE,
  add_total = TRUE,
  total_var = "total"
)

bar_plot_2(
  df = df_2,
  x_var = "unit",
  y_var = "prop",
  y_labels = scales::label_percent(),
  reference_line = 0.6,
  horizontal = TRUE
)

df_3 <- data.frame(
  unit = rep(c("b", "Ã¥", "a"), each = 3),
  category = c("Ja", "Delvis", "Nej"),
  n = c(13, 9, 10, 5, 5, 7, 8, 7, 14),
  total = rep(c(32, 17, 29), each = 3)
) |>
  dplyr::mutate(
    prop = n / total
  )

bar_plot_2(
  df = df_3,
  x_var = "unit",
  y_var = "prop",
  fill_var = "category",
  horizontal = TRUE,
  position = "stack",
  y_labels = scales::label_percent(),
  arrange_by = "total",
  add_total = TRUE,
  total_var = "total",
  fill_var_order = c("Ja", "Delvis", "Nej")
)

bar_plot_2(
  df = df_3,
  x_var = "unit",
  y_var = "prop",
  fill_var = "category",
  horizontal = TRUE,
  position = "stack",
  y_labels = scales::label_percent(),
  arrange_by = "unit",
  arrange_desc = TRUE,
  add_total = TRUE,
  total_var = "total",
  fill_var_order = c("Ja", "Delvis", "Nej")
)

bar_plot_2(
  df = df_3,
  x_var = "unit",
  y_var = "prop",
  fill_var = "category",
  horizontal = TRUE,
  position = "stack",
  y_labels = scales::label_percent(),
  arrange_by = "unit",
  arrange_desc = FALSE,
  add_total = TRUE,
  total_var = "total"
)

bar_plot_2(
  df = df_3,
  x_var = "unit",
  y_var = "prop",
  fill_var = "category",
  horizontal = TRUE,
  position = "stack",
  y_labels = scales::label_percent(),
  arrange_by = "prop",
  arrange_desc = FALSE,
  arrange_by_fill = "Ja"
)

}
