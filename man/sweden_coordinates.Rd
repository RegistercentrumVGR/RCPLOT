% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/swe_data.R
\docType{data}
\name{counties}
\alias{counties}
\alias{municipalities}
\title{Map coordinates for Sweden counties}
\format{
A sf dataset with one row per county
\describe{
\item{id}{ID of county (as in data from SCB)}
\item{geometry}{Coordinate polygon used to draw county borders}
\item{Name}{Name of county}
}

A sf dataset with one row per municipality
\describe{
\item{id}{ID of municipality with region code (as in data from SCB)}
\item{geometry}{Coordinate polygon used to draw municipality borders}
\item{Name}{Name of municipality}
\item{RegionID}{County code}
\item{MunicipID}{Municipality code}
}
}
\source{
\url{http://api.thenmap.net/v2/se-4/geo/2020-06-03}
\url{https://www.scb.se/contentassets/7a89e48960f741e08918e489ea36354a/kommunlankod_20211229.xls}

\url{http://api.thenmap.net/v2/se-7/geo/2020-06-03}
\url{https://www.scb.se/contentassets/7a89e48960f741e08918e489ea36354a/kommunlankod_20211229.xls}
}
\usage{
counties

municipalities
}
\description{
Map coordinates for Sweden counties

Map coordinates for Sweden municipalites
}
\examples{
# Use internal coordinate datasets
region_coords <- counties
municip_coords <- municipalities

# Map with labels
data <- region_coords \%>\%
  dplyr::mutate(
    labels = paste0(id, " - ", Name)
  )

map_plot(
  df = data,
  fill_var = "labels",
  label_var = "id",
  fill_colors = c(RColorBrewer::brewer.pal(12, "Set3"),
                  RColorBrewer::brewer.pal(9, "Spectral"))
)

# Add some "interresting" data to coordinate dataset and plot
region_coords[["var"]] <- factor(sample(c("Sämst", "Dålig", "Bra", "Bäst"),
                                 size = 21, replace = TRUE),
                                 ordered = TRUE,
                                 levels = c("Sämst", "Dålig", "Bra", "Bäst")
                                 )

map_plot(
  df = region_coords,
  fill_var = "var",
  fill_colors = colors_rc(n = 4, type = "RYG")
)

# Plot both municipalities and region outlines
ggplot2::ggplot() +
  ggplot2::geom_sf(data = municipalities, ggplot2::aes(fill = as.numeric(id))) +
  ggplot2::geom_sf(data = counties, fill = NA, color = "red") +
  ggplot2::theme_void()

# Plot municipalities of Västra Götalands Län, with and without labels
vgregion <- dplyr::filter(municipalities, RegionID == "14")

vgregion[["var"]] <- sample(c("Bäst", "Bra", "Dålig", "Sämst"),
                            size = nrow(vgregion), replace = TRUE)

map_plot(
  df = vgregion,
  fill_var = "var"
)
map_plot(
  df = vgregion,
  fill_var = "var",
  label_var = "Name"
)


# Use internal coordinate datasets
region_coords <- counties
municip_coords <- municipalities

# Map with labels
data <- region_coords \%>\%
  dplyr::mutate(
    labels = paste0(id, " - ", Name)
  )

map_plot(
  df = data,
  fill_var = "labels",
  label_var = "id",
  fill_colors = c(RColorBrewer::brewer.pal(12, "Set3"),
                  RColorBrewer::brewer.pal(9, "Spectral"))
)

# Add some "interresting" data to coordinate dataset and plot
region_coords[["var"]] <- factor(sample(c("Sämst", "Dålig", "Bra", "Bäst"),
                                 size = 21, replace = TRUE),
                                 ordered = TRUE,
                                 levels = c("Sämst", "Dålig", "Bra", "Bäst")
                                 )

map_plot(
  df = region_coords,
  fill_var = "var",
  fill_colors = colors_rc(n = 4, type = "RYG")
)

# Plot both municipalities and region outlines
ggplot2::ggplot() +
  ggplot2::geom_sf(data = municipalities, ggplot2::aes(fill = as.numeric(id))) +
  ggplot2::geom_sf(data = counties, fill = NA, color = "red") +
  ggplot2::theme_void()

# Plot municipalities of Västra Götalands Län, with and without labels
vgregion <- dplyr::filter(municipalities, RegionID == "14")

vgregion[["var"]] <- sample(c("Bäst", "Bra", "Dålig", "Sämst"),
                            size = nrow(vgregion), replace = TRUE)

map_plot(
  df = vgregion,
  fill_var = "var"
)
map_plot(
  df = vgregion,
  fill_var = "var",
  label_var = "Name"
)


}
\keyword{datasets}
